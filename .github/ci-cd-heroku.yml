name: CI â†’ Heroku CD

# Trigger on pushes to your default branch
on:
  push:
    branches: [ main ]   # change to 'master' if that's your default

jobs:
  build-and-test:
    name: ðŸ”¨ Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js v22
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install backend dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: npm ci --prefix frontend

      - name: Build frontend (ignore CRA warnings)
        run: |
          CI=false npm run build --prefix frontend

      - name: Run tests
        run: npm test

  deploy:
    name: ðŸš€ Deploy to Heroku
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Authenticate with Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "$HEROKU_API_KEY" | heroku auth:token

      - name: Add Heroku remote
        run: |
          # Remove any old heroku remote (ignore errors if none)
          git remote remove heroku || true
          # Use the Heroku CLI to set the correct remote
          heroku git:remote -a nutribyteheroku

      - name: Deploy to Heroku
        run: |
          # Deploy your main branch (or master if that's your branch)
          git push heroku main --force